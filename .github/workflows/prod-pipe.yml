name: Build and Release Radix Gateway (Windows + Linux + macOS)

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-windows:
    name: Build & Upload Windows Executables
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./gateway
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtual environment
        shell: powershell
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1

      - name: Install dependencies
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          pip install pyinstaller PyQt5

      - name: Build GUI Executable
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          pyinstaller --onefile --windowed --icon=assets/logo.ico --add-data "assets;assets" gateway.py
          Move-Item -Path .\dist\gateway* -Destination .\dist\gateway-gui-windows.exe

      - name: Build Headless Executable
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          pyinstaller --onefile gateway_headless.py
          Move-Item -Path .\dist\gateway_headless* -Destination .\dist\gateway-headless-windows.exe

      - name: Build IP Set Tool
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          pyinstaller --onefile --windowed --name "IPSetTool" ipset.py
          Move-Item -Path .\dist\IPSetTool* -Destination .\dist\ipset-tool-windows.exe

      - name: Determine release tag
        id: release_tag
        shell: powershell
        run: |
          if ($env:GITHUB_REF -like "refs/tags/*") {
            echo "tag_name=$($env:GITHUB_REF -replace 'refs/tags/', '')" >> $env:GITHUB_ENV
          } else {
            echo "tag_name=snapshot" >> $env:GITHUB_ENV
          }

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag_name }}
          files: ./gateway/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build & Upload Linux Executables
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gateway
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies for PyQt5
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libegl1 libfontconfig1 libdbus-1-3
        shell: bash

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
        shell: bash

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller PyQt5
        shell: bash

      - name: Build GUI Executable
        run: |
          source .venv/bin/activate
          pyinstaller --onefile --windowed --icon=assets/logo.ico --add-data "assets:assets" gateway.py
          mv ./dist/gateway* ./dist/gateway-gui-linux
        shell: bash

      - name: Build Headless Executable
        run: |
          source .venv/bin/activate
          pyinstaller --onefile gateway_headless.py
          mv ./dist/gateway_headless* ./dist/gateway-headless-linux
        shell: bash

      - name: Build IP Set Tool
        run: |
          source .venv/bin/activate
          pyinstaller --onefile --windowed --name "IPSetTool" ipset.py
          mv ./dist/IPSetTool* ./dist/ipset-tool-linux
          chmod +x ./dist/ipset-tool-linux
        shell: bash

      - name: Determine release tag
        id: release_tag
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "tag_name=snapshot" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag_name }}
          files: ./gateway/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build & Upload macOS Executables
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./gateway
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtual environment
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
        shell: bash

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller PyQt5
        shell: bash

      - name: Build GUI Executable (macOS)
        run: |
          source .venv/bin/activate
          # Create a proper .app bundle
          pyinstaller --onefile --windowed --name "RadixGateway" --icon assets/logo.icns gateway.py
          # Move to final dist folder with clear name
          mv ./dist/RadixGateway.app ./dist/gateway-gui-macos
        shell: bash

      - name: Build Headless Executable (macOS)
        run: |
          source .venv/bin/activate
          pyinstaller --onefile --name "RadixGatewayHeadless" gateway_headless.py
          mv ./dist/RadixGatewayHeadless ./dist/gateway-headless-macos
        shell: bash

      - name: Build IP Set Tool (macOS)
        run: |
          source .venv/bin/activate
          pyinstaller --onefile --windowed --name "IPSetTool" ipset.py
          mv ./dist/IPSetTool.app ./dist/ipset-tool-macos
        shell: bash

      - name: Determine release tag
        id: release_tag
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "tag_name=snapshot" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag_name }}
          files: ./gateway/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}