name: Build and Release Radix Gateway

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  
  # --- MANUAL TRIGGER ADDED HERE ---
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'GitHub Tag Name (e.g., v1.0.0). Required for release upload.'
        required: true
        type: string
  # -----------------------------------

jobs:
  build-release:
    name: Build & Upload Executables
    # Use the trigger tag or the manually supplied tag for the release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.10'] # Changed to an explicit list containing the version as a string

    defaults:
      run:
        working-directory: ./gateway  # gateway folder

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      # If manually triggered, we need to checkout the code based on the tag input
      with:
        ref: ${{ github.event.inputs.tag_name || github.ref_name }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        # Pass the matrix variable directly
        python-version: ${{ matrix.python-version }}

    - name: Create virtual environment
      run: python -m venv .venv

    - name: Install dependencies
      shell: bash
      run: |
        source .venv/bin/activate
        pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pyinstaller

    - name: Build GUI Executable (gateway.py)
      shell: bash
      run: |
        source .venv/bin/activate
        # NOTE: Using the correct path separator based on OS for --add-data
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          pyinstaller --onefile --windowed --icon=assets/logo.ico --add-data "assets;assets" gateway.py
        else
          pyinstaller --onefile --windowed --icon=assets/logo.ico --add-data "assets:assets" gateway.py
        fi
        mv ./dist/gateway* ./dist/gateway-gui-${RUNNER_OS}

    - name: Build Headless Executable (gateway_headless.py)
      shell: bash
      run: |
        source .venv/bin/activate
        pyinstaller --onefile gateway_headless.py
        mv ./dist/gateway_headless* ./dist/gateway-headless-${RUNNER_OS}

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        # Use the tag from the push event, or the tag supplied via manual input
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
        files: ./dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
